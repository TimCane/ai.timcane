---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import CommandPostTile from "../../components/CommandPostTile";
import CommandSearch from "../../components/CommandSearch";

const commands = (await getCollection("commands")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
);

// Get unique tags and categories for filtering
const allTags = [...new Set(commands.flatMap((command) => command.data.tags))];
const allCategories = [
  ...new Set(commands.map((command) => command.data.category)),
];
---

<Layout title="Commands - Tim Cane">
  <div class="container mx-auto px-4 py-8 max-w-4xl">
    <h1 class="text-4xl font-bold mb-8 animated-gradient-text">Commands</h1>

    <CommandSearch commands={commands} client:load />

    <div id="commands-grid" class="grid gap-6">
      {
        commands.map((command) => (
          <CommandPostTile post={command} href={`/commands/${command.slug}`} />
        ))
      }
    </div>
  </div>
</Layout>

<script>
  // Client-side filtering
  const commandsGrid = document.getElementById("commands-grid");
  const originalHTML = commandsGrid?.innerHTML;

  document.addEventListener("command-filter", ((event: CustomEvent) => {
    if (!commandsGrid || !originalHTML) return;

    const filteredCommands = event.detail;

    if (filteredCommands.length === 0) {
      commandsGrid.innerHTML = `
        <div class="text-center py-12 text-text-muted">
          No commands found. Try adjusting your search.
        </div>
      `;
    } else {
      commandsGrid.innerHTML = filteredCommands
        .map((command) => {
          const date = new Date(command.data.date);
          const formattedDate = date.toLocaleString("en-GB", {
            day: "numeric",
            month: "numeric",
            year: "numeric",
            hour: "2-digit",
            minute: "2-digit",
          });
          return `
            <a 
              href="/commands/${command.slug}"
              class="block bg-card border border-card-border rounded-2xl p-6 
                     hover:shadow-lg transition-all group cursor-pointer"
            >
              <div class="flex flex-col h-full">
                <div class="mb-4">
                  <div class="flex items-center gap-2 text-sm text-text-muted mb-2">
                    <time datetime="${date.toISOString()}">
                      ${formattedDate}
                    </time>
                    <span>â€¢</span>
                    <span>${command.data.category}</span>
                  </div>
                  <h3 class="text-xl font-semibold text-text group-hover:text-accent transition-colors">
                    ${command.data.title}
                  </h3>
                </div>
                <p class="text-text-muted mb-6 flex-grow">
                  ${command.data.summary}
                </p>
                <div class="space-y-4">
                  <div class="flex flex-wrap gap-2">
                    ${command.data.tags
                      .map(
                        (tag) => `
                      <span class="px-2 py-1 bg-tag-bg text-tag-text rounded-full text-sm
                                 group-hover:bg-tag-hover-bg group-hover:text-tag-hover-text 
                                 transition-colors">
                        ${tag}
                      </span>
                    `,
                      )
                      .join("")}
                  </div>
                  <div class="flex items-center gap-4 text-sm">
                    <div class="flex items-center gap-1 text-text-muted">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                      </svg>
                      <span>${command.data.filesChanged.length} files</span>
                    </div>
                    <div class="flex items-center gap-1 text-text-muted">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                      </svg>
                      <span>${command.data.codeSnippets} snippets</span>
                    </div>
                  </div>
                </div>
              </div>
            </a>
          `;
        })
        .join("");
    }
  }) as EventListener);
</script>
