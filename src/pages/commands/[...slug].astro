---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { format } from "date-fns";

export async function getStaticPaths() {
    const commands = await getCollection("commands");
    return commands.map((command) => ({
        params: { slug: command.slug },
        props: { command },
    }));
}

const { command } = Astro.props;
const { Content } = await command.render();
const date = new Date(command.data.date);
const formattedDate = date.toLocaleString("en-GB", {
    day: "numeric",
    month: "numeric",
    year: "numeric",
    hour: "2-digit",
    minute: "2-digit",
});

// Get previous and next commands for navigation
const allCommands = await getCollection("commands");
const sortedCommands = allCommands.sort(
    (a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
);
const currentIndex = sortedCommands.findIndex((c) => c.slug === command.slug);
const prevCommand =
    currentIndex < sortedCommands.length - 1
        ? sortedCommands[currentIndex + 1]
        : null;
const nextCommand = currentIndex > 0 ? sortedCommands[currentIndex - 1] : null;
---

<Layout title={`${command.data.title} - Tim Cane`}>
    <article class="container mx-auto px-4 py-8 max-w-4xl">
        <header class="mb-8">
            <div class="flex items-center gap-2 text-sm text-text-muted mb-2">
                <time datetime={date.toISOString()}>
                    {formattedDate}
                </time>
                <span>â€¢</span>
                <span>{command.data.category}</span>
            </div>
            <h1 class="text-4xl font-bold mb-4 text-text">
                {command.data.title}
            </h1>
            <p class="text-xl text-text-muted mb-6">{command.data.summary}</p>

            <div class="flex flex-wrap gap-6">
                <div class="flex items-center gap-1 text-text-muted">
                    <svg
                        class="w-5 h-5"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"
                        ></path>
                    </svg>
                    <span>{command.data.filesChanged.length} files changed</span
                    >
                </div>
                <div class="flex items-center gap-1 text-text-muted">
                    <svg
                        class="w-5 h-5"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
                    </svg>
                    <span>{command.data.codeSnippets} code snippets</span>
                </div>
                <div class="flex items-center gap-1 text-text-muted">
                    <svg
                        class="w-5 h-5"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"
                        ></path>
                    </svg>
                    <span>{command.data.aiPromptCount} AI prompts</span>
                </div>
            </div>

            <div class="flex flex-wrap gap-2 mt-6">
                {
                    command.data.tags.map((tag) => (
                        <span class="px-2 py-1 bg-tag-bg text-tag-text rounded-full text-sm">
                            {tag}
                        </span>
                    ))
                }
            </div>
        </header>

        <div class="prose prose-lg max-w-none">
            <Content />
        </div>
    </article>
</Layout>

<style>
    .prose {
        @apply text-text;
    }
    .prose h1,
    .prose h2,
    .prose h3,
    .prose h4 {
        @apply text-text;
    }
    .prose code {
        @apply text-sm px-1 py-0.5 rounded;
    }
    .prose pre code {
        @apply bg-transparent p-0;
    }
</style>
